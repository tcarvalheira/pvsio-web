main: THEORY
 BEGIN

  Alarm: TYPE = { off, mute, alarm }

  state: TYPE = [#
    id: string,
    spo2: real, % sensor data - blood oxigenation level (percentage)
    spo2_max: nonneg_real,
    spo2_min: nonneg_real,
    spo2_label: string,
    spo2_alarm: Alarm,
    spo2_fail: bool,
    rra: real, % sensor data - acoustic respiratory rate (breaths per minute, bpm)
    rra_max: nonneg_real,
    rra_min: nonneg_real,
    rra_label: string,
    rra_alarm: Alarm,
    rra_fail: bool,
    isOn: bool,
    isAlarmOn: bool
  #]

  init(x: real): state = (#
    id := "PhilipxMX550",
    spo2 := 99,
    spo2_max := 0,
    spo2_min := 88,
    spo2_label := "SpO2",
    spo2_alarm := off,
    spo2_fail := false,
    rra := 18,
    rra_max := 30,
    rra_min := 6,
    rra_label := "RRa",
    rra_alarm := off,
    rra_fail := false,
    isOn := false,
    isAlarmOn := true
  #)

  init(x: real, id: string): state = (#
    id := id,
    spo2 := 98,
    spo2_max := 100,
    spo2_min := 96,
    spo2_label := "SpO2",
    spo2_alarm := off,
    spo2_fail := false,
    rra := 18,
    rra_max := 30,
    rra_min := 6,
    rra_label := "RRa",
    rra_alarm := off,
    rra_fail := false,
    
    isOn := false,
    isAlarmOn := true
  #)

per_on(st: state): bool = true
on(st: (per_on)): state = st WITH [ isOn := NOT isOn(st) ]
click_btn_on_off(st: state): state =
    COND
      per_on(st) -> on(st),
      ELSE -> st
    ENDCOND

per_click_btn_alarm_off(st: state): bool = true
alarmOn(st: (per_click_btn_alarm_off)): state = st WITH [ isAlarmOn := NOT isAlarmOn(st)]
click_btn_alarm_off(st: state): state =
    COND
      per_click_btn_alarm_off(st) -> alarmOn(st),
      ELSE -> st
    ENDCOND

 END main
